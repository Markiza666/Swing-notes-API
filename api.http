// - Testing in Rest Client -//


// --- User Authentication --- //

// 1. Register new user (Sign Up)
POST http://localhost:3000/api/user/signup
Content-Type: application/json

{
    "username": "SignUserName",
    "password": "NewPass123"
}

###

// 2. Log in user (Login)
POST http://localhost:3000/api/user/login
Content-Type: application/json

{
    "username": "SignUserName",
    "password": "NewPass123"
}

###

// --- Note Management (requires JWT token) ---
@token = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4N2QxNTk0MTc1MDQxMmFjMzBiMDU5MCIsInVzZXJuYW1lIjoiU2lnblVzZXJOYW1lIiwiaWF0IjoxNzUzMDI4MDEzLCJleHAiOjE3NTMwMzE2MTN9.1Ircr8m7epHGuDDTZNf7IJcS9et2ZbCeFytvAzw-Mtw

###

// 3. Get all notes (GET /api/notes)
GET http://localhost:3000/api/notes
Authorization: Bearer {{token}}

###

// 4. Create a new note (POST /api/notes)
POST http://localhost:3000/api/notes
Content-Type: application/json
Authorization: Bearer {{token}}

{
    "title": "A new note",
    "text": "This is a test note created with REST Client."
}

###

// 5. Search for notes (GET /api/notes/search?q=...)
GET http://localhost:3000/api/notes/search?q=VS%20Code
Authorization: Bearer {{token}}

###

// 6. Get a specific note by ID (GET /api/notes/:id)
GET http://localhost:3000/api/notes/687d160a1750412ac30b0596
Authorization: Bearer {{token}}

###

// 7. Update a note (PUT /api/notes/:id)
PUT http://localhost:3000/api/notes/687d160a1750412ac30b0596
Content-Type: application/json
Authorization: Bearer {{token}}

{
    "title": "Updated title from VS Code",
    "text": "This note has now been updated."
}

###

// 8. Delete a note (DELETE /api/notes/:id)
DELETE http://localhost:3000/api/notes/687d0da11750412ac30b058b
Authorization: Bearer {{token}}